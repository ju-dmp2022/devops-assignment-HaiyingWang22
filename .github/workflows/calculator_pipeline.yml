# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  
permissions:
  contents: read
  checks: write
  
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    env:
      PYTHONPATH: ${{ github.workspace }}/BE
      SELENIUM_REMOTE_URL: http://localhost:4444/wd/hub  

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Get content from git repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'
          
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r BE/requirements.txt 
          pip install -r FE/requirements.txt

      - name: Start Selenium Docker container
        run: |
          docker run --name selenium -d --add-host host.docker.internal:host-gateway -p 4444:4444 --shm-size="2g" selenium/standalone-chrome:4.2.1-20220531
        timeout-minutes: 1     
           
        
      - name: Docker Compose front-back service
        run: |  
          docker compose -p webcalculator up -d 
        timeout-minutes: 1

      - name: Run tests with pytest
        run: |
          python -m pytest -s --junit-xml=report.xml
        #env:
          
          
      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v4
        if: success() || failure() # always run even if the previous step fails
        with:
          report_paths: 'report.xml'   
          
          
      - name: Login to Azure Container Registry
        uses: azure/docker-login@v1
        if: success()
        with:
          login-server: judevops.azurecr.io
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}

      - name: Build and push Docker image
        if: success()
        run: |
          docker build -t judevops.azurecr.io/haiying_wang-calculator:latest ./BE
          docker push judevops.azurecr.io/haiying_wang-calculator:latest
